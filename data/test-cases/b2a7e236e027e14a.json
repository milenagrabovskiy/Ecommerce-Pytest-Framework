{"uid":"b2a7e236e027e14a","name":"test_end_to_end_checkout_guest_user","fullName":"tests.frontend.end_to_end.test_end_to_end_checkout_guest_user.TestEndToEndCheckoutGuestUser#test_end_to_end_checkout_guest_user","historyId":"77c52d9598dc337c8e7354cb596b181a","time":{"start":1756316690180,"stop":1756316709741,"duration":19561},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: Element with locator = ('css selector', 'header h1.entry-title'), does not contain text: \"Order received\", after waiting 5 seconds.","statusTrace":"self = <end_to_end.test_end_to_end_checkout_guest_user.TestEndToEndCheckoutGuestUser object at 0x7f2ce4f48b90>\n\n    @pytest.mark.tcid33\n    @pytest.mark.pioneertcid3\n    def test_end_to_end_checkout_guest_user(self):\n        # create objects\n        home_page = HomePage(self.driver)\n        header = Header(self.driver)\n        cart_page = CartPage(self.driver)\n        checkout_page = CheckoutPage(self.driver)\n        order_received = OrderReceivedPage(self.driver)\n    \n        # go to home page\n        home_page.go_to_home_page()\n    \n        # add item to cart\n        home_page.click_first_add_to_cart_button()\n    \n        # make sure the cart is updated before going to cart\n        header.wait_until_cart_item_count(1)\n    \n        # go to cart\n        header.click_on_cart_on_right_header()\n    \n        # verify there are items in the cart\n        product_names = cart_page.get_all_product_names_in_cart()\n        assert len(product_names) == 1, f\"Expected 1 product in cart but found {len(product_names)}\"\n    \n        #  apply coupon\n        cart_page.click_apply_coupon_arrow()\n        coupon_code = MainConfigs.get_coupon_code('FREE_COUPON')\n        cart_page.apply_coupon(coupon_code)\n        cart_page.verify_order_total_is_0()\n    \n        # proceed to checkout\n        cart_page.click_on_proceed_to_checkout()\n    \n        # fill in checkout form\n        checkout_page.fill_in_billing_info()\n    \n        # submit\n        checkout_page.click_place_order()\n        checkout_page.click_place_order()\n    \n        # verify order is placed\n>       order_received.verify_order_received_page_loaded()\n\ntests/frontend/end_to_end/test_end_to_end_checkout_guest_user.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/pages/OrderReceivedPage.py:12: in verify_order_received_page_loaded\n    self.sl.wait_until_element_contains_text(self.PAGE_MAIN_HEADER, \"Order received\")\nsrc/selenium_extended/SeleniumExtended.py:87: in wait_until_element_contains_text\n    WebDriverWait(self.driver, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2b7cc04a-8ec7-4c2b-9225-9f193a821b9f\")>\nmethod = <function text_to_be_present_in_element.<locals>._predicate at 0x7f2ce4f2d1c0>\nmessage = 'Element with locator = (\\'css selector\\', \\'header h1.entry-title\\'), does not contain text: \"Order received\", after waiting 5 seconds.'\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Element with locator = ('css selector', 'header h1.entry-title'), does not contain text: \"Order received\", after waiting 5 seconds.\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"init_driver","time":{"start":1756316688688,"stop":1756316690179,"duration":1491},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"init_driver::0","time":{"start":1756316709773,"stop":1756316710399,"duration":626},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"pioneertcid3"},{"name":"tag","value":"tcid33"},{"name":"tag","value":"feregression"},{"name":"tag","value":"fesmoke"},{"name":"tag","value":"end_to_end"},{"name":"parentSuite","value":"tests.frontend.end_to_end"},{"name":"suite","value":"test_end_to_end_checkout_guest_user"},{"name":"subSuite","value":"TestEndToEndCheckoutGuestUser"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2637-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.frontend.end_to_end.test_end_to_end_checkout_guest_user"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4f24979b4b39c3be","status":"passed","time":{"start":1756316689139,"stop":1756316705266,"duration":16127}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["pioneertcid3","feregression","end_to_end","tcid33","fesmoke"]},"source":"b2a7e236e027e14a.json","parameterValues":[]}