{"uid":"81ea021117bc4208","name":"test_create_a_simple_product","fullName":"tests.backend.products.test_create_products_smoke#test_create_a_simple_product","historyId":"2276d2c022558d427521057b4e8d7d1a","time":{"start":1756573199391,"stop":1756573200471,"duration":1080},"description":"Test creating a simple product via the WooCommerce API.\n\nSteps:\n    - Create a product with 'simple' type and a random name.\n    - Assert the POST response contains correct data.\n    - Assert the product is retrievable via GET.\n    - Assert the product exists in the database.\n    - Track the product ID for teardown cleanup.\n\nArgs:\n    setup_teardown (dict): Fixture providing API helper, DAO helper, and product ID list.\n\nRaises:\n    AssertionError: If any validation (API or DB) fails.\n","descriptionHtml":"<p>Test creating a simple product via the WooCommerce API.</p>\n<p>Steps:<br />\n- Create a product with 'simple' type and a random name.<br />\n- Assert the POST response contains correct data.<br />\n- Assert the product is retrievable via GET.<br />\n- Assert the product exists in the database.<br />\n- Track the product ID for teardown cleanup.</p>\n<p>Args:<br />\nsetup_teardown (dict): Fixture providing API helper, DAO helper, and product ID list.</p>\n<p>Raises:<br />\nAssertionError: If any validation (API or DB) fails.</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup_teardown","time":{"start":1756573199391,"stop":1756573199391,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Test creating a simple product via the WooCommerce API.\n\nSteps:\n    - Create a product with 'simple' type and a random name.\n    - Assert the POST response contains correct data.\n    - Assert the product is retrievable via GET.\n    - Assert the product exists in the database.\n    - Track the product ID for teardown cleanup.\n\nArgs:\n    setup_teardown (dict): Fixture providing API helper, DAO helper, and product ID list.\n\nRaises:\n    AssertionError: If any validation (API or DB) fails.\n","status":"passed","steps":[],"attachments":[{"uid":"813de481a9fb9ef7","name":"log","source":"813de481a9fb9ef7.txt","type":"text/plain","size":223}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup_teardown::0","time":{"start":1756573200472,"stop":1756573201133,"duration":661},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"ecom188"},{"name":"parentSuite","value":"tests.backend.products"},{"name":"suite","value":"test_create_products_smoke"},{"name":"host","value":"pkrvmccyg1gnepe"},{"name":"thread","value":"2102-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.backend.products.test_create_products_smoke"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["ecom188"]},"source":"81ea021117bc4208.json","parameterValues":[]}