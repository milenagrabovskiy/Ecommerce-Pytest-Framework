{"uid":"15d3916030ff1030","name":"test_price_boundaries[very large price and sale price]","fullName":"tests.backend.products.test_create_products_regression#test_price_boundaries","historyId":"17518d78f9bee06e8d99009c8af84f2b","time":{"start":1759589399559,"stop":1759589400234,"duration":675},"description":"Test creating a product with valid sale_price within acceptable boundaries.\n\nThis test verifies that when a product is created with a sale_price that is\nless than the regular_price, the API stores the correct values for both\nregular_price and sale_price, and the product is properly recorded in the DB.\n\nArgs:\n    setup_teardown (fixture): Fixture providing API and database helpers.\n    regular_price (str): Regular price to use when creating the product.\n    sale_price (str): Sale price to use when creating the product.\n\nRaises:\n    AssertionError: If the API or database does not store prices correctly.\n","descriptionHtml":"<p>Test creating a product with valid sale_price within acceptable boundaries.</p>\n<p>This test verifies that when a product is created with a sale_price that is<br />\nless than the regular_price, the API stores the correct values for both<br />\nregular_price and sale_price, and the product is properly recorded in the DB.</p>\n<p>Args:<br />\nsetup_teardown (fixture): Fixture providing API and database helpers.<br />\nregular_price (str): Regular price to use when creating the product.<br />\nsale_price (str): Sale price to use when creating the product.</p>\n<p>Raises:<br />\nAssertionError: If the API or database does not store prices correctly.</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup_teardown","time":{"start":1759589396750,"stop":1759589396750,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Test creating a product with valid sale_price within acceptable boundaries.\n\nThis test verifies that when a product is created with a sale_price that is\nless than the regular_price, the API stores the correct values for both\nregular_price and sale_price, and the product is properly recorded in the DB.\n\nArgs:\n    setup_teardown (fixture): Fixture providing API and database helpers.\n    regular_price (str): Regular price to use when creating the product.\n    sale_price (str): Sale price to use when creating the product.\n\nRaises:\n    AssertionError: If the API or database does not store prices correctly.\n","status":"passed","steps":[],"attachments":[{"uid":"732cb8ad66fff996","name":"log","source":"732cb8ad66fff996.txt","type":"text/plain","size":5718}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup_teardown::0","time":{"start":1759589401302,"stop":1759589402956,"duration":1654},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"sale_price_edge"},{"name":"tag","value":"ebe34"},{"name":"tag","value":"products"},{"name":"tag","value":"create_product"},{"name":"parentSuite","value":"tests.backend.products"},{"name":"suite","value":"test_create_products_regression"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2098-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.backend.products.test_create_products_regression"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"regular_price","value":"'9999999.99'"},{"name":"sale_price","value":"'9999999.90'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["sale_price_edge","ebe34","create_product","products"]},"source":"15d3916030ff1030.json","parameterValues":["'9999999.99'","'9999999.90'"]}