{"uid":"6b4922dacc1d9895","name":"test_create_customer_fail_when_no_password_is_provided","fullName":"tests.backend.customers.test_create_customer_smoke.TestCreateCustomer#test_create_customer_fail_when_no_password_is_provided","historyId":"0ce8fd1e976426299211351cd09dd277","time":{"start":1757921058208,"stop":1757921058208,"duration":0},"description":"Test API fails when no password is provided.\n\nVerifies:\n    - API returns 400\n    - Error message specifies missing password\n\nRaises:\n    AssertionError: If missing param error is not correctly returned.\n","descriptionHtml":"<p>Test API fails when no password is provided.</p>\n<p>Verifies:<br />\n- API returns 400<br />\n- Error message specifies missing password</p>\n<p>Raises:<br />\nAssertionError: If missing param error is not correctly returned.</p>\n","status":"broken","statusMessage":"RuntimeError: 'cryptography' package is required for sha256_password or caching_sha2_password auth methods","statusTrace":"self = <test_create_customer_smoke.TestCreateCustomer object at 0x7fb2332f6fd0>\n\n    def setup_method(self):\n        \"\"\"Set up the test before each test method is run.\n    \n        Initializes:\n            - WooAPIUtility for API calls\n            - CustomersDAO for DB access\n            - Random test credentials (email and password)\n            - A random existing customer from the database\n        \"\"\"\n        self.woo_helper = WooAPIUtility()\n        self.customer_dao = CustomersDAO()\n        self.random_email = generate_random_email_and_password(email_prefix=\"test_user\")[\"email\"]\n        self.random_password = generate_random_email_and_password()[\"password\"]\n>       self.rand_cust = self.customer_dao.get_random_customer_from_db()\n\ntests/backend/customers/test_create_customer_smoke.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/dao/customers_dao.py:22: in get_random_customer_from_db\n    rs_sql = self.db_helper.execute_select(sql)\nsrc/utilities/dbUtility.py:31: in execute_select\n    conn = self.create_connection()\nsrc/utilities/dbUtility.py:23: in create_connection\n    connection = pymysql.connect(host=self.host, user=self.creds['db_user'],\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pymysql/connections.py:361: in __init__\n    self.connect()\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pymysql/connections.py:669: in connect\n    self._request_authentication()\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pymysql/connections.py:979: in _request_authentication\n    auth_packet = _auth.caching_sha2_password_auth(self, auth_packet)\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pymysql/_auth.py:267: in caching_sha2_password_auth\n    data = sha2_rsa_encrypt(conn.password, conn.salt, conn.server_public_key)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npassword = b'SpecialStudentsSecret', salt = b'\"[e%!\\x12\\x7fP/8%5MTBVF[\\x19\\x7f'\npublic_key = b'-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmE7rN2b1SK+cHlbBJuhy\\n7WnyqChNyu7BrMutBWtlMO...EozxYH9BW+KJ23\\nvx4a0Hrs6Ui6XNKiYmsK9l/PwEwYt3phoWR0RAh27OM12+mxaNwalSUs0uosqNFr\\nNwIDAQAB\\n-----END PUBLIC KEY-----\\n'\n\n    def sha2_rsa_encrypt(password, salt, public_key):\n        \"\"\"Encrypt password with salt and public_key.\n    \n        Used for sha256_password and caching_sha2_password.\n        \"\"\"\n        if not _have_cryptography:\n>           raise RuntimeError(\n                \"'cryptography' package is required for sha256_password or\"\n                + \" caching_sha2_password auth methods\"\n            )\nE           RuntimeError: 'cryptography' package is required for sha256_password or caching_sha2_password auth methods\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pymysql/_auth.py:144: RuntimeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestCreateCustomer","time":{"start":1757921058208,"stop":1757921058365,"duration":157},"status":"broken","statusMessage":"RuntimeError: 'cryptography' package is required for sha256_password or caching_sha2_password auth methods\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/_pytest/python.py\", line 821, in xunit_setup_method_fixture\n    _call_with_optional_argument(func, method)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/_pytest/python.py\", line 717, in _call_with_optional_argument\n    func()\n    ~~~~^^\n  File \"/home/runner/work/Ecommerce-Pytest-Framework/Ecommerce-Pytest-Framework/demostore_automation/tests/backend/customers/test_create_customer_smoke.py\", line 26, in setup_method\n    self.rand_cust = self.customer_dao.get_random_customer_from_db()\n                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/home/runner/work/Ecommerce-Pytest-Framework/Ecommerce-Pytest-Framework/demostore_automation/src/dao/customers_dao.py\", line 22, in get_random_customer_from_db\n    rs_sql = self.db_helper.execute_select(sql)\n  File \"/home/runner/work/Ecommerce-Pytest-Framework/Ecommerce-Pytest-Framework/demostore_automation/src/utilities/dbUtility.py\", line 31, in execute_select\n    conn = self.create_connection()\n  File \"/home/runner/work/Ecommerce-Pytest-Framework/Ecommerce-Pytest-Framework/demostore_automation/src/utilities/dbUtility.py\", line 23, in create_connection\n    connection = pymysql.connect(host=self.host, user=self.creds['db_user'],\n                                 password=self.creds['db_password'],\n                                 port=self.port)\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pymysql/connections.py\", line 361, in __init__\n    self.connect()\n    ~~~~~~~~~~~~^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pymysql/connections.py\", line 669, in connect\n    self._request_authentication()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pymysql/connections.py\", line 979, in _request_authentication\n    auth_packet = _auth.caching_sha2_password_auth(self, auth_packet)\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pymysql/_auth.py\", line 267, in caching_sha2_password_auth\n    data = sha2_rsa_encrypt(conn.password, conn.salt, conn.server_public_key)\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pymysql/_auth.py\", line 144, in sha2_rsa_encrypt\n    raise RuntimeError(\n    ...<2 lines>...\n    )\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Test API fails when no password is provided.\n\nVerifies:\n    - API returns 400\n    - Error message specifies missing password\n\nRaises:\n    AssertionError: If missing param error is not correctly returned.\n","status":"broken","statusMessage":"RuntimeError: 'cryptography' package is required for sha256_password or caching_sha2_password auth methods","statusTrace":"self = <test_create_customer_smoke.TestCreateCustomer object at 0x7fb2332f6fd0>\n\n    def setup_method(self):\n        \"\"\"Set up the test before each test method is run.\n    \n        Initializes:\n            - WooAPIUtility for API calls\n            - CustomersDAO for DB access\n            - Random test credentials (email and password)\n            - A random existing customer from the database\n        \"\"\"\n        self.woo_helper = WooAPIUtility()\n        self.customer_dao = CustomersDAO()\n        self.random_email = generate_random_email_and_password(email_prefix=\"test_user\")[\"email\"]\n        self.random_password = generate_random_email_and_password()[\"password\"]\n>       self.rand_cust = self.customer_dao.get_random_customer_from_db()\n\ntests/backend/customers/test_create_customer_smoke.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/dao/customers_dao.py:22: in get_random_customer_from_db\n    rs_sql = self.db_helper.execute_select(sql)\nsrc/utilities/dbUtility.py:31: in execute_select\n    conn = self.create_connection()\nsrc/utilities/dbUtility.py:23: in create_connection\n    connection = pymysql.connect(host=self.host, user=self.creds['db_user'],\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pymysql/connections.py:361: in __init__\n    self.connect()\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pymysql/connections.py:669: in connect\n    self._request_authentication()\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pymysql/connections.py:979: in _request_authentication\n    auth_packet = _auth.caching_sha2_password_auth(self, auth_packet)\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pymysql/_auth.py:267: in caching_sha2_password_auth\n    data = sha2_rsa_encrypt(conn.password, conn.salt, conn.server_public_key)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npassword = b'SpecialStudentsSecret', salt = b'\"[e%!\\x12\\x7fP/8%5MTBVF[\\x19\\x7f'\npublic_key = b'-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmE7rN2b1SK+cHlbBJuhy\\n7WnyqChNyu7BrMutBWtlMO...EozxYH9BW+KJ23\\nvx4a0Hrs6Ui6XNKiYmsK9l/PwEwYt3phoWR0RAh27OM12+mxaNwalSUs0uosqNFr\\nNwIDAQAB\\n-----END PUBLIC KEY-----\\n'\n\n    def sha2_rsa_encrypt(password, salt, public_key):\n        \"\"\"Encrypt password with salt and public_key.\n    \n        Used for sha256_password and caching_sha2_password.\n        \"\"\"\n        if not _have_cryptography:\n>           raise RuntimeError(\n                \"'cryptography' package is required for sha256_password or\"\n                + \" caching_sha2_password auth methods\"\n            )\nE           RuntimeError: 'cryptography' package is required for sha256_password or caching_sha2_password auth methods\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pymysql/_auth.py:144: RuntimeError","steps":[],"attachments":[{"uid":"d63b48157ebd72d7","name":"log","source":"d63b48157ebd72d7.txt","type":"text/plain","size":80}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"pioneertcid13"},{"name":"tag","value":"tcid32"},{"name":"tag","value":"ebe7"},{"name":"tag","value":"beregression"},{"name":"tag","value":"besmoke"},{"name":"tag","value":"customers_api"},{"name":"parentSuite","value":"tests.backend.customers"},{"name":"suite","value":"test_create_customer_smoke"},{"name":"subSuite","value":"TestCreateCustomer"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2086-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.backend.customers.test_create_customer_smoke"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["ebe7","beregression","customers_api","pioneertcid13","tcid32","besmoke"]},"source":"6b4922dacc1d9895.json","parameterValues":[]}