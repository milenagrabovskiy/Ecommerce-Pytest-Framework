{"uid":"7228e469b6c4452b","name":"test_create_order_empty_line_items_negative","fullName":"tests.backend.orders.test_create_order_smoke#test_create_order_empty_line_items_negative","historyId":"80666f3b733096d0d1c042de99d92d6b","time":{"start":1757095942638,"stop":1757095943525,"duration":887},"description":"Verify that an order can be created without products (empty line_items).\n\nWooCommerce allows order creation without mandatory product fields.\nThis test ensures:\n  - The order is created with an empty `line_items` list.\n  - The order status is returned as \"completed\".\n\nArgs:\n    my_orders_smoke_setup (fixture): Provides API helpers and teardown tracking.\n","descriptionHtml":"<p>Verify that an order can be created without products (empty line_items).</p>\n<p>WooCommerce allows order creation without mandatory product fields.<br />\nThis test ensures:</p>\n<ul>\n<li>The order is created with an empty <code>line_items</code> list.</li>\n<li>The order status is returned as &quot;completed&quot;.</li>\n</ul>\n<p>Args:<br />\nmy_orders_smoke_setup (fixture): Provides API helpers and teardown tracking.</p>\n","status":"broken","statusMessage":"KeyError: 0","statusTrace":"my_orders_smoke_setup = {'generic_orders_helper': <demostore_automation.src.generic_helpers.generic_orders_helper.GenericOrdersHelper object a...<demostore_automation.src.api_helpers.OrdersAPIHelper.OrdersAPIHelper object at 0x7f7320f304d0>, 'product_id': 20, ...}\n\n    @pytest.mark.ecomorders4\n    def test_create_order_empty_line_items_negative(my_orders_smoke_setup):\n        \"\"\"Verify that an order can be created without products (empty line_items).\n    \n        WooCommerce allows order creation without mandatory product fields.\n        This test ensures:\n          - The order is created with an empty `line_items` list.\n          - The order status is returned as \"completed\".\n    \n        Args:\n            my_orders_smoke_setup (fixture): Provides API helpers and teardown tracking.\n        \"\"\"\n        product_args = {\"line_items\": []}\n        responses_list = my_orders_smoke_setup[\"generic_orders_helper\"].create_order(additional_args=product_args)\n>       create_order_response = responses_list[0]\nE       KeyError: 0\n\ntests/backend/orders/test_create_order_smoke.py:192: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"my_orders_smoke_setup","time":{"start":1757095921181,"stop":1757095921522,"duration":341},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Verify that an order can be created without products (empty line_items).\n\nWooCommerce allows order creation without mandatory product fields.\nThis test ensures:\n  - The order is created with an empty `line_items` list.\n  - The order status is returned as \"completed\".\n\nArgs:\n    my_orders_smoke_setup (fixture): Provides API helpers and teardown tracking.\n","status":"broken","statusMessage":"KeyError: 0","statusTrace":"my_orders_smoke_setup = {'generic_orders_helper': <demostore_automation.src.generic_helpers.generic_orders_helper.GenericOrdersHelper object a...<demostore_automation.src.api_helpers.OrdersAPIHelper.OrdersAPIHelper object at 0x7f7320f304d0>, 'product_id': 20, ...}\n\n    @pytest.mark.ecomorders4\n    def test_create_order_empty_line_items_negative(my_orders_smoke_setup):\n        \"\"\"Verify that an order can be created without products (empty line_items).\n    \n        WooCommerce allows order creation without mandatory product fields.\n        This test ensures:\n          - The order is created with an empty `line_items` list.\n          - The order status is returned as \"completed\".\n    \n        Args:\n            my_orders_smoke_setup (fixture): Provides API helpers and teardown tracking.\n        \"\"\"\n        product_args = {\"line_items\": []}\n        responses_list = my_orders_smoke_setup[\"generic_orders_helper\"].create_order(additional_args=product_args)\n>       create_order_response = responses_list[0]\nE       KeyError: 0\n\ntests/backend/orders/test_create_order_smoke.py:192: KeyError","steps":[],"attachments":[{"uid":"c92e622e6764cd2b","name":"log","source":"c92e622e6764cd2b.txt","type":"text/plain","size":3150}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"my_orders_smoke_setup::0","time":{"start":1757095943530,"stop":1757095947949,"duration":4419},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"ecomorders4"},{"name":"parentSuite","value":"tests.backend.orders"},{"name":"suite","value":"test_create_order_smoke"},{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"2107-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.backend.orders.test_create_order_smoke"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["ecomorders4"]},"source":"7228e469b6c4452b.json","parameterValues":[]}