{"uid":"6fcaa42fa597aa31","name":"test_change_product_quantity[negative product qty]","fullName":"tests.frontend.product_description_page.test_change_product_quantity.TestChangeProductQuantity#test_change_product_quantity","historyId":"f5cfce28492a563c6ec9e02e593d40c0","time":{"start":1758560709587,"stop":1758560711076,"duration":1489},"description":"Verify product quantity can be set on PDP and reflected in cart.\n\nHandles edge cases for zero, negative, and high quantities.\nRemoves product and checks cart emptiness for cleanup.\n\nArgs:\n    quantity (int): Quantity to set for the product.\n","descriptionHtml":"<p>Verify product quantity can be set on PDP and reflected in cart.</p>\n<p>Handles edge cases for zero, negative, and high quantities.<br />\nRemoves product and checks cart emptiness for cleanup.</p>\n<p>Args:<br />\nquantity (int): Quantity to set for the product.</p>\n","status":"failed","statusMessage":"AssertionError: Wrong product qty in cart. Actual: 'Please select a value that is no less than 1.',Expected: 'Value must be greater than or equal to 1.'","statusTrace":"self = <test_change_product_quantity.TestChangeProductQuantity object at 0x7fec197c4180>\nquantity = -1\n\n    def test_change_product_quantity(self, quantity):\n        \"\"\"Verify product quantity can be set on PDP and reflected in cart.\n    \n        Handles edge cases for zero, negative, and high quantities.\n        Removes product and checks cart emptiness for cleanup.\n    \n        Args:\n            quantity (int): Quantity to set for the product.\n        \"\"\"\n        home_page = HomePage(self.driver)\n        pdp_page = ProductDescriptionPage(self.driver)\n        header = Header(self.driver)\n        cart_page = CartPage(self.driver)\n    \n        # go to home page\n        home_page.go_to_home_page()\n    \n        # add item to cart\n        home_page.click_first_product()\n        pdp_page.type_product_qty(quantity)\n    \n        # add to cart\n        if quantity <= 0:\n>           pdp_page.verify_qty_error_msg()\n\ntests/frontend/product_description_page/test_change_product_quantity.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <demostore_automation.src.pages.ProductDescriptionPage.ProductDescriptionPage object at 0x7fec19760050>\n\n    def verify_qty_error_msg(self):\n        qty_field = self.sl.wait_until_element_is_visible(self.PRODUCT_QTY_FIELD)\n        # there is no selector (not a web element) for invalid quantity alert, so must use get_attribute\n        # 'min' qty given in 'input' tag in the product qty field\n        message = qty_field.get_attribute(\"validationMessage\") # part of HTML5 API, not in browser\n>       assert message == 'Value must be greater than or equal to 1.',\\\n                                                        (f\"Wrong product qty in cart. Actual: '{message}',\"\n                                                         f\"Expected: 'Value must be greater than or equal to 1.'\")\nE       AssertionError: Wrong product qty in cart. Actual: 'Please select a value that is no less than 1.',Expected: 'Value must be greater than or equal to 1.'\n\nsrc/pages/ProductDescriptionPage.py:93: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"init_driver","time":{"start":1758560700015,"stop":1758560701538,"duration":1523},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"init_driver::0","time":{"start":1758560711082,"stop":1758560711745,"duration":663},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"efe35"},{"name":"tag","value":"feregression"},{"name":"tag","value":"pdp"},{"name":"parentSuite","value":"tests.frontend.product_description_page"},{"name":"suite","value":"test_change_product_quantity"},{"name":"subSuite","value":"TestChangeProductQuantity"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2637-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.frontend.product_description_page.test_change_product_quantity"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"quantity","value":"-1"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6dbc9031db4d55d1","status":"passed","time":{"start":1758560703187,"stop":1758560705017,"duration":1830}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["efe35","feregression","pdp"]},"source":"6fcaa42fa597aa31.json","parameterValues":["-1"]}