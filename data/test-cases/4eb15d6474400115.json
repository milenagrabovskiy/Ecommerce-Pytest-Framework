{"uid":"4eb15d6474400115","name":"test_change_password_neg[missing current password]","fullName":"tests.frontend.my_account.test_my_account_signed_in_neg.TestMyAccountSignedInNeg#test_change_password_neg","historyId":"b08bf91bb3c5523ef54ed6a7a05bee97","time":{"start":1760465082790,"stop":1760465087825,"duration":5035},"description":"Verify validation errors appear when required fields are missing.\n\nThis test covers negative password change scenarios, confirming\nthat the process fails gracefully when specific fields are left blank.\n\nArgs:\n    missing_field (str): Specifies which field to leave blank. Accepted values:\n        - \"name\"\n        - \"current_password\"\n        - \"confirm_password\"\n\nAssertions:\n    - Verifies that the success message is not displayed.\n    - Ensures the correct error message appears when a field is missing.\n\nRaises:\n    AssertionError: If the success message is displayed despite a missing field.\n","descriptionHtml":"<p>Verify validation errors appear when required fields are missing.</p>\n<p>This test covers negative password change scenarios, confirming<br />\nthat the process fails gracefully when specific fields are left blank.</p>\n<p>Args:<br />\nmissing_field (str): Specifies which field to leave blank. Accepted values:<br />\n- &quot;name&quot;<br />\n- &quot;current_password&quot;<br />\n- &quot;confirm_password&quot;</p>\n<p>Assertions:<br />\n- Verifies that the success message is not displayed.<br />\n- Ensures the correct error message appears when a field is missing.</p>\n<p>Raises:<br />\nAssertionError: If the success message is displayed despite a missing field.</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: Element with locator ('xpath', '//*[@id=\"post-9\"]/div/div/nav/ul') not found after timeout of 5\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:202:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:555:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16","statusTrace":"self = <test_my_account_signed_in_neg.TestMyAccountSignedInNeg object at 0x7f12560190f0>\nmissing_field = 'current_password'\n\n    @pytest.mark.neg\n    @pytest.mark.parametrize(\n        \"missing_field\",\n        [\n            pytest.param(\"confirm_password\", marks=pytest.mark.efe67, id=\"missing confirm password\"),\n            pytest.param(\"name\", marks=pytest.mark.efe68, id=\"missing name\"),\n            pytest.param(\"current_password\", marks=pytest.mark.efe69, id=\"missing current password\")\n        ]\n    )\n    def test_change_password_neg(self, missing_field):\n        \"\"\"Verify validation errors appear when required fields are missing.\n    \n        This test covers negative password change scenarios, confirming\n        that the process fails gracefully when specific fields are left blank.\n    \n        Args:\n            missing_field (str): Specifies which field to leave blank. Accepted values:\n                - \"name\"\n                - \"current_password\"\n                - \"confirm_password\"\n    \n        Assertions:\n            - Verifies that the success message is not displayed.\n            - Ensures the correct error message appears when a field is missing.\n    \n        Raises:\n            AssertionError: If the success message is displayed despite a missing field.\n        \"\"\"\n        # go to account details\n>       self.myacct.get_side_navigation_menu()\n\ntests/frontend/my_account/test_my_account_signed_in_neg.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/pages/MyAccountSignedInPage.py:43: in get_side_navigation_menu\n    self.sl.wait_until_element_is_visible(self.SIDE_NAVIGATION)\nsrc/selenium_extended/SeleniumExtended.py:108: in wait_until_element_is_visible\n    elem = WebDriverWait(self.driver, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f0b24101-f547-42fb-a4ec-f63923ebc921\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f1255f0e0c0>\nmessage = 'Element with locator (\\'xpath\\', \\'//*[@id=\"post-9\"]/div/div/nav/ul\\') not found after timeout of 5'\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Element with locator ('xpath', '//*[@id=\"post-9\"]/div/div/nav/ul') not found after timeout of 5\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:202:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:555:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"init_driver","time":{"start":1760465067805,"stop":1760465069208,"duration":1403},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_registered_user","time":{"start":1760465069208,"stop":1760465071630,"duration":2422},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1760465071630,"stop":1760465071631,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"init_driver::0","time":{"start":1760465087833,"stop":1760465088462,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"neg"},{"name":"tag","value":"efe69"},{"name":"tag","value":"feregression"},{"name":"tag","value":"my_account_neg"},{"name":"parentSuite","value":"tests.frontend.my_account"},{"name":"suite","value":"test_my_account_signed_in_neg"},{"name":"subSuite","value":"TestMyAccountSignedInNeg"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2636-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.frontend.my_account.test_my_account_signed_in_neg"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"missing_field","value":"'current_password'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3f4f11c447a9040a","status":"passed","time":{"start":1760465070911,"stop":1760465073800,"duration":2889}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["neg","my_account_neg","efe69","feregression"]},"source":"4eb15d6474400115.json","parameterValues":["'current_password'"]}