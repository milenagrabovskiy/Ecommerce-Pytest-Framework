"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Mon Sep 01 22:51:53 UTC 2025","Mon Sep 01 22:51:56 UTC 2025","3267","tests.frontend.components","test_free_shipping_banner","TestFreeShippingBanner","","","test_verify_free_shipping_banner_not_displayed_in_my_account_page",""
"passed","Mon Sep 01 22:51:48 UTC 2025","Mon Sep 01 22:51:49 UTC 2025","1119","tests.frontend.components","test_free_shipping_banner","TestFreeShippingBanner","","","test_verify_free_shipping_banner_displayed_in_home_page",""
"passed","Mon Sep 01 22:51:58 UTC 2025","Mon Sep 01 22:52:12 UTC 2025","13705","tests.frontend.end_to_end","test_end_to_end_checkout_guest_user","TestEndToEndCheckoutGuestUser","","","test_end_to_end_checkout_guest_user",""
"passed","Mon Sep 01 22:52:17 UTC 2025","Mon Sep 01 22:52:19 UTC 2025","2002","tests.frontend.my_account","test_login_negative","TestLoginNegative","","","test_login_none_existing_user",""
"passed","Mon Sep 01 22:52:22 UTC 2025","Mon Sep 01 22:52:24 UTC 2025","2428","tests.frontend.my_account","test_register_new_user","TestRegisterNewUser","","","test_register_valid_new_user","
Test to verify a valid user can register to the site.
It generates a random email and password, then registers the user.
:return:
"
"passed","Mon Sep 01 22:52:15 UTC 2025","Mon Sep 01 22:52:15 UTC 2025","84","tests.frontend.home_page","test_home_page_smoke","TestHomePageSmoke","","","test_verify_header_menu_is_displayed",""
"passed","Mon Sep 01 22:51:50 UTC 2025","Mon Sep 01 22:51:53 UTC 2025","2744","tests.frontend.components","test_free_shipping_banner","TestFreeShippingBanner","","","test_verify_free_shipping_banner_displayed_in_checkout_page",""
"passed","Mon Sep 01 22:52:27 UTC 2025","Mon Sep 01 22:52:28 UTC 2025","552","tests.frontend.product_description_page","test_pdp_variable_product","TestProductDescriptionPageVariableProduct","","","test_verify_main_image_variable_prod","Verify that the main product image on the frontend matches the one returned by the API.

This test fetches the displayed product image URL from the frontend and compares it
against a list of image URLs retrieved from the API. It also checks that the displayed
URL is valid (i.e., starts with 'http' and ends with '.jpg').

Args:
    setup: A pytest fixture that sets up the browser and test environment.

Raises:
    AssertionError: If the image URL is invalid or does not match any from the API.
"
"passed","Mon Sep 01 22:51:49 UTC 2025","Mon Sep 01 22:51:50 UTC 2025","755","tests.frontend.components","test_free_shipping_banner","TestFreeShippingBanner","","","test_verify_free_shipping_banner_displayed_in_cart_page",""
"passed","Mon Sep 01 22:52:15 UTC 2025","Mon Sep 01 22:52:15 UTC 2025","230","tests.frontend.home_page","test_home_page_smoke","TestHomePageSmoke","","","test_verify_number_of_products_displayed",""
"passed","Mon Sep 01 22:52:27 UTC 2025","Mon Sep 01 22:52:27 UTC 2025","89","tests.frontend.product_description_page","test_pdp_variable_product","TestProductDescriptionPageVariableProduct","","","test_verify_product_name_displayed_variable_product","Verify that the product name (h1 header) is correctly displayed for a variable product.

This test checks that the displayed product name on the frontend matches the expected value
for a known variable product. The product is hardcoded to keep the test frontend-only.

Args:
    setup: A pytest fixture that sets up the test environment and necessary page objects.

Raises:
    AssertionError: If the displayed product name does not match the expected name.
"
"passed","Mon Sep 01 22:52:15 UTC 2025","Mon Sep 01 22:52:15 UTC 2025","23","tests.frontend.home_page","test_home_page_smoke","TestHomePageSmoke","","","test_verify_heading_is_displayed",""
"passed","Mon Sep 01 22:52:28 UTC 2025","Mon Sep 01 22:52:28 UTC 2025","68","tests.frontend.product_description_page","test_pdp_variable_product","TestProductDescriptionPageVariableProduct","","","test_verify_alternate_images_variable_prod","Verify that all alternate product images on the frontend match the API response.

This test retrieves all alternate product image URLs displayed on the frontend
and compares them to the image URLs returned by the WooCommerce API.

The comparison ignores the order of images but requires exact URL matches.

Args:
    setup: A pytest fixture that initializes the test environment and page objects.

Raises:
    AssertionError: If the displayed alternate image URLs do not match the API URLs.
"
