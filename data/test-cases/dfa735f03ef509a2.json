{"uid":"dfa735f03ef509a2","name":"test_change_password","fullName":"tests.frontend.my_account.test_my_account_signed_in.TestMyAccountSignedIn#test_change_password","historyId":"d6ab2069cab200835a793518d2523c03","time":{"start":1759700205434,"stop":1759700216514,"duration":11080},"description":"Verify that a signed-in user can successfully change their password.\n\nThis test navigates to the Account Details page, updates first and last\nnames, changes the account password, and validates that a success message\nappears. It also confirms that the user can log back in using the new password.\n\nExpected Result:\n    The system displays a success message confirming the password change,\n    and login with the new password is successful.\n","descriptionHtml":"<p>Verify that a signed-in user can successfully change their password.</p>\n<p>This test navigates to the Account Details page, updates first and last<br />\nnames, changes the account password, and validates that a success message<br />\nappears. It also confirms that the user can log back in using the new password.</p>\n<p>Expected Result:<br />\nThe system displays a success message confirming the password change,<br />\nand login with the new password is successful.</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: Element with locator ('css selector', 'li.woocommerce-MyAccount-navigation-link--customer-logout a') not found after timeout of 5\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:202:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:555:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16","statusTrace":"self = <test_my_account_signed_in.TestMyAccountSignedIn object at 0x7fdc62a29d90>\ncreate_registered_user = {'email': 'testuser_ynflnbxplg@supersqa.com', 'password': 'mubjKudJPxMZOtgAwikc'}\nsetup = None\n\n    @pytest.mark.efe66\n    def test_change_password(self, create_registered_user, setup):\n        \"\"\"Verify that a signed-in user can successfully change their password.\n    \n        This test navigates to the Account Details page, updates first and last\n        names, changes the account password, and validates that a success message\n        appears. It also confirms that the user can log back in using the new password.\n    \n        Expected Result:\n            The system displays a success message confirming the password change,\n            and login with the new password is successful.\n        \"\"\"\n        # go to account details\n        self.myacct.get_side_navigation_menu()\n        self.myacct.go_to_account_details()\n    \n        # input first and last name\n        f_name = 'John'\n        l_name = 'Doe'\n        self.myacct.input_first_name(f_name)\n        self.myacct.input_last_name(l_name)\n    \n        # input current password\n        self.myacct.input_current_password(self.password)\n    \n        # create new password\n        new_password = generate_random_string()\n    \n        # input new password twice\n        self.myacct.input_new_password(new_password=new_password)\n        self.myacct.confirm_new_password(new_password=new_password)\n    \n        # click save changes\n        self.myacct.click_on_save_changes_btn()\n    \n        # verify success message that password was changed\n        expected_message = 'Account details changed successfully.'\n        message = self.myacct.get_password_changed_success_msg()\n        assert message == expected_message, (f\"ERROR. Wrong message displayed after changing password.\"\n                                             f\"Actual: {message}, Expected: {expected_message}\")\n    \n        # logout\n        self.myacct.click_logout()\n    \n        # login with new password\n        self.myacct_so.input_login_username(self.email)\n        self.myacct_so.input_login_password(new_password)\n        self.myacct_so.click_login_button()\n    \n        # verify user is signed in\n>       self.myacct.verify_user_is_signed_in()\n\ntests/frontend/my_account/test_my_account_signed_in.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/pages/MyAccountSignedInPage.py:21: in verify_user_is_signed_in\n    self.sl.wait_until_element_is_visible(self.LEFT_NAV_LOGOUT_BTN)\nsrc/selenium_extended/SeleniumExtended.py:108: in wait_until_element_is_visible\n    elem = WebDriverWait(self.driver, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3d9c6b9b-287f-40e6-8a6c-8f64477d554e\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7fdc628fe8e0>\nmessage = \"Element with locator ('css selector', 'li.woocommerce-MyAccount-navigation-link--customer-logout a') not found after timeout of 5\"\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Element with locator ('css selector', 'li.woocommerce-MyAccount-navigation-link--customer-logout a') not found after timeout of 5\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:202:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:555:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"init_driver","time":{"start":1759700197623,"stop":1759700199088,"duration":1465},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_registered_user","time":{"start":1759700199088,"stop":1759700201573,"duration":2485},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1759700201573,"stop":1759700201573,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"init_driver::0","time":{"start":1759700216546,"stop":1759700217177,"duration":631},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"efe66"},{"name":"tag","value":"feregression"},{"name":"tag","value":"fesmoke"},{"name":"tag","value":"my_account2"},{"name":"parentSuite","value":"tests.frontend.my_account"},{"name":"suite","value":"test_my_account_signed_in"},{"name":"subSuite","value":"TestMyAccountSignedIn"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2636-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.frontend.my_account.test_my_account_signed_in"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3e771e331e5ce716","status":"passed","time":{"start":1759700185993,"stop":1759700192928,"duration":6935}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["my_account2","feregression","efe66","fesmoke"]},"source":"dfa735f03ef509a2.json","parameterValues":[]}